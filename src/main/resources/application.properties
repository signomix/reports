signomix.image.group.default=
quarkus.container-image.builder=jib
quarkus.container-image.group=${SIGNOMIX_IMAGE_GROUP:${signomix.image.group.default}}
quarkus.container-image.name=${SIGNOMIX_IMAGE_NAME:signomix-reports}
quarkus.container-image.tag=${SIGNOMIX_IMAGE_TAG:%release%}

## HTTP
quarkus.http.port=${PORT:8080}
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.access-control-allow-credentials=true
quarkus.http.access-log.enabled=true

## DATASOURCES
signomix.database.type=${SIGNOMIX_DATABASE_TYPE:postgresql}

quarkus.datasource.olap.db-kind=postgresql
quarkus.datasource.olap.username=${POSTGRES_USER:postgres}
quarkus.datasource.olap.password=${POSTGRES_PASSWORD:postgres}
quarkus.datasource.olap.jdbc.url=${POSTGRES_URL}
#quarkus.datasource.olap.jdbc.telemetry=true

quarkus.datasource.oltp.db-kind=postgresql
quarkus.datasource.oltp.username=${POSTGRES_USER:postgres}
quarkus.datasource.oltp.password=${POSTGRES_PASSWORD:postgres}
quarkus.datasource.oltp.jdbc.url=${POSTGRES_URL}
#quarkus.datasource.oltp.jdbc.telemetry=true

quarkus.datasource.qdb.db-kind=postgresql
quarkus.datasource.qdb.username=${QDB_USER}
quarkus.datasource.qdb.password=${QDB_PASSWORD}
quarkus.datasource.qdb.jdbc.url=${QDB_URL}

questdb.client.config=${SIGNOMIX_QUESTDB_CONFIG}


## OPENAPI
quarkus.smallrye-openapi.path=/api/reports
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/api/reports/q/swagger

## OPEN TELEMTRY
#quarkus.otel.exporter.otlp.traces.endpoint=http://jaeger-all-in-one:4317
##quarkus.otel.exporter.otlp.traces.headers=authorization=Bearer my_secret 
#quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n 

## LOGGING
quarkus.log.level=${SIGNOMIX_LOG_LEVEL:INFO}
quarkus.log.handler.gelf.enabled=${GELF_ENABLED:false}
quarkus.log.handler.gelf.host=${GELF_HOST}
quarkus.log.handler.gelf.port=${GELF_PORT}
quarkus.log.handler.gelf.additional-field.X-OVH-TOKEN.value=${GELF_TOKEN}
quarkus.log.handler.gelf.additional-field.X-OVH-TOKEN.type=String